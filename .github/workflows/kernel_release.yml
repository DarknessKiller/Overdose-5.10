name: Overdose Kernel Build CI

on:
  push:
    branches:
        - android12-5.10-2023-04_r8/release

env:
  GH_TOKEN: ${{ GITHUB.TOKEN }}
  TZ: ${{secrets.TZ}}

jobs:
  build-gki-clang:
    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: | 
        sudo apt update -y
        sudo apt install -y repo elfutils libarchive-tools
    - name: Initialize repo
      run: repo init -u https://github.com/DarknessKiller/android_kernel_manifest.git -b overdose-gki-5.10 --depth=1
    - name: Repo sync
      run: repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: KernelSU sync
      run: |
        cd common
        git submodule update --init --recursive
    - name: Fetch SlimLLVM
      run: |
        rm -rf prebuilts-master/clang/host/linux-x86/clang-r416183b
        git clone https://gitlab.com/MRDarknessKiller/slimllvm.git -b 17 --depth=1 prebuilts-master/clang/host/linux-x86/clang-r416183b
    - name: Build Kernel
      run: |
        sed -i s/build-user/mrdarknessk/g build/_setup_env.sh
        sed -i s/build-host/github-actions/g build/_setup_env.sh
        awk -v new_tz="$TZ" '{gsub("TZ=UTC", "TZ=" new_tz)} 1' build/_setup_env.sh > temp && mv temp build/_setup_env.sh
        sed -i 's/KBUILD_BUILD_TIMESTAMP="$(date -d @${SOURCE_DATE_EPOCH})"/KBUILD_BUILD_TIMESTAMP="$(date)"/g' build/_setup_env.sh
        LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh
    - name: Create zip
      run: |
        cp out/android12-5.10/dist/Image ak3/
        cd ak3/ && zip -r9 OverdoseGKI-5.10-$(date +%Y%m%d-%H%M).zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release
       path: ak3/*.zip

  publish-release:
    needs: [build-gki-clang]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Restoring artifacts
      uses: actions/download-artifact@main
      with:
        name: release
        path: ${{ github.workspace }}
    - name: Release Tag
      id: release_tag
      run: echo "TAG_NAME=$(date -u +%d%m%Y%I%M)" >> $GITHUB_ENV
    - name: Create Release
      run: gh release create ${{ env.TAG_NAME }} --generate-notes -p *.zip
    - name: Release Check
      run: gh release list -L 1 > list
    - name: Prepare release message
      run: gh release view $(cat list | awk '{ print substr( $0, 1, length($0)-45 ) }') > release-text
